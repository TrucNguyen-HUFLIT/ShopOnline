@{
    ViewData["Title"] = "Management Sell";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}
@model ShopOnline.Core.Models.Product.ProductModel
@using X.PagedList.Mvc.Core;
@using Microsoft.AspNetCore.Mvc;

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4">
    <div class="d-block mb-4 mb-md-0">
        <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
            <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                <li class="breadcrumb-item">
                    <a href="#">
                        <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                    </a>
                </li>
                <li class="breadcrumb-item"><a>Management Sell</a></li>
                <li class="breadcrumb-item active" aria-current="page">List Product</li>
            </ol>
        </nav>
        <h2 class="h4">List Product </h2>
    </div>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a asp-action="CreateProduct" asp-controller="Product" class="btn btn-sm btn-gray-800 d-inline-flex align-items-center">
            <svg class="icon icon-xs me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
            Add New Product
        </a>
    </div>
</div>
<div class="table-settings mb-4">
    <div class="row align-items-center justify-content-between">
        @using (Html.BeginForm("ListProduct", "Product", FormMethod.Get))
        {
            <div class="col col-md-6 col-lg-3 col-xl-4">
                <div class="input-group me-2 me-lg-3 fmxw-400">
                    <span class="input-group-text">
                        <svg class="icon icon-xs" x-description="Heroicon name: solid/search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
                        </svg>
                    </span>
                    <input type="text" class="form-control" id="searchString" name="searchString" value="@ViewBag.CurrentFilter" placeholder="Find by name or email">
                    <button type="submit" value="Search" class="btn btn-sm btn-gray-800 d-inline-flex align-items-center">
                        Search
                    </button>
                </div>
            </div>
        }
    </div>
</div>
<div class="card card-body border-0 shadow table-wrapper table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>@Html.ActionLink("Id", "ListProduct", new { sortOrder = ViewBag.IDSortParm }, new { @class = "text-info" })</th>
                <th>  @Html.ActionLink("Name", "ListProduct", new { sortOrder = ViewBag.NameSortParm }, new { @class = "text-info" })</th>
                <th>@Html.DisplayNameFor(model => model.productInfor.Quantity)</th>
                <th>@Html.DisplayNameFor(model => model.productInfor.Size)</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.ListProduct)
            {
                <tr id="id-@product.Id">
                    <td >
                        @product.Id
                    </td>
                    <td>
                        @product.Name
                    </td>
                    <td>
                        @product.Quantity
                    </td>
                    <td>
                        @product.Size
                    </td>
                    <td>
                        @foreach (var productDetail in Model.ListProductDetail)
                        {
                            if (productDetail.Id == product.IdProductDetail)
                            {
                                @productDetail.Status
                                break;
                            }
                        }
                    </td>
                    <td>
                        <a asp-action="UpdateProduct" asp-route-id="@product.Id" type="button"><i class="fas fa-edit" style="font-size: 20px; color: #f0bc74;"></i></a>
                        @{
                            string url = "/product/deleteproduct";
                        }
                        <a onclick="ConfirmDelete(@product.Id, '@url')"><i class="fas fa-trash-alt" style="font-size: 20px; color: #E11D48; margin-left:10px"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    Page @(Model.ListProduct.PageCount < Model.ListProduct.PageNumber ? 0 : Model.ListProduct.PageNumber) of @Model.ListProduct.PageCount
    @Html.PagedListPager(Model.ListProduct, page => Url.Action("ListProduct",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    @*<div class="fw-normal small mt-4 mt-lg-0">Showing <b>5</b> out of <b>25</b> entries</div>*@
</div>
